@page "/projetos"
@inject HttpClient Http

@inherits ComponentBase

<!-- Listagem de Projetos -->
<section id="projetos" class="section">
    <h2>🗂️ Projetos</h2>
    <div class="project-grid">
        @if (Projetos != null)
        {
            @foreach (var projeto in Projetos)
            {
                <div class="project-card" @onclick="() => LoadProjectDetails(projeto.Id)">
                    <h5 title="@projeto.Nome">@projeto.Nome</h5>
                    <p title="@projeto.Resumo">@projeto.Resumo</p>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#projectModal">Saiba mais</button>
                </div>
            }
        }
        else
        {
            <p>Carregando projetos...</p>
        }
    </div>
</section>

<!-- Modal para exibir detalhes do projeto -->
<div class="modal fade" id="projectModal" tabindex="-1" aria-labelledby="projectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="projectModalLabel">@ProjetoSelecionado?.Nome</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (ProjetoSelecionado != null)
                {
                    <p>@ProjetoSelecionado.Descricao</p>
                    <img src="@ProjetoSelecionado.ImagemUrl" alt="@ProjetoSelecionado.Nome" class="img-fluid my-2">
                    <img src="@ProjetoSelecionado.ThumbnailUrl" alt="@ProjetoSelecionado.Nome" class="img-fluid">
                    @if (!string.IsNullOrEmpty(ProjetoSelecionado.VideoUrl))
                    {
                        <div class="embed-responsive embed-responsive-16by9 mt-2">
                            <iframe class="embed-responsive-item" src="@ProjetoSelecionado.VideoUrl" allowfullscreen></iframe>
                        </div>
                    }
                }
                else
                {
                    <p>Carregando...</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

<style>
    .project-grid {
        display: flex;
        -moz-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        -o-flex-wrap: wrap;
        -webkit-flex-wrap: wrap;
        flex-wrap: wrap;
        gap: 20px;
        -o-justify-content: center;
        -webkit-justify-content: center;
        justify-content: center;
    }

    .project-card {
        display: flex;
        flex-direction: column;
        -ms-align-items: center;
        -o-align-items: center;
        -webkit-align-items: center;
        align-items: center;
        background-color: #f9f9f9;
        -ms-border-radius: 8px;
        border-radius: 8px;
        padding: 20px;
        width: 100%;
        max-width: 700px;
        height: 250px;
        text-align: start;
        -ms-transition: transform 0.3s ease, box-shadow 0.3s ease;
        -o-transition: transform 0.3s ease, box-shadow 0.3s ease;
        -webkit-transition: transform 0.3s ease, box-shadow 0.3s ease;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .project-card h5 {
            width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            margin-bottom: 10px;
        }

        .project-card p {
            width: 100%;
            height: 100px;
            overflow: hidden;
            text-overflow: ellipsis;
            margin-bottom: 10px;
        }

        .project-card button {
            margin-top: auto;
        }

        .project-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .modal-content {
        background-color: #f9f9f9;
        border-radius: 8px;
        padding: 20px;
    }

    .embed-responsive {
        position: relative;
        display: block;
        width: 100%;
        padding: 0;
        overflow: hidden;
    }

        .embed-responsive::before {
            content: "";
            display: block;
            padding-top: 56.25%; /* 16:9 aspect ratio */
        }

    .embed-responsive-item {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        width: 100%;
        height: 100%;
        border: 0;
    }
</style>

@code {
    private List<Projeto> Projetos;
    private Projeto ProjetoSelecionado;

    protected override async Task OnInitializedAsync()
    {
        Projetos = await Http.GetFromJsonAsync<List<Projeto>>("sample-data/projetos.json");
    }

    private async Task LoadProjectDetails(int projectId)
    {
        // Simule uma chamada assíncrona para carregar os detalhes do projeto
        await Task.Delay(500); // Remova isso na implementação real

        ProjetoSelecionado = Projetos.FirstOrDefault(p => p.Id == projectId);
    }

    public class Projeto
    {
        public int Id { get; set; }
        public string Nome { get; set; }
        public string Resumo { get; set; }
        public string ThumbnailUrl { get; set; }
        public string Descricao { get; set; }
        public string ImagemUrl { get; set; }
        public string VideoUrl { get; set; }
    }
}